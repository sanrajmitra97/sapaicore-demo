apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: fruit-clf-<TEAM_NUMBER>-<YOUR NAME> # executable id, must be unique across all your workflows (YAML files)
  annotations:
    scenarios.ai.sap.com/description: "Making fruit image classification using CNN"
    scenarios.ai.sap.com/name: "fruit-image-classification" # Scenario name should be the use case
    executables.ai.sap.com/description: "Image Tensorlfow GPU Serving executable"
    executables.ai.sap.com/name: "fruit-serve-exectuable" # Executable name should describe the workflow in the use case
    artifacts.ai.sap.com/fruitdataset.kind: "dataset"
    artifacts.ai.sap.com/fruitmodel.kind: "model" # Helps in suggesting the kind of artifact that can be generated.
  labels:
    scenarios.ai.sap.com/id: "image-clf"
    ai.sap.com/version: "1.0"
spec:
  imagePullSecrets:
    - name: credstutorialrepo-<your name> # your docker registry secret
  entrypoint: mypipeline
  templates:
  - name: mypipeline
    steps:
    - - name: mypredictor
        template: mycodeblock1
  - name: mycodeblock1
    inputs:
      artifacts:  # placeholder for cloud storage attachements
        - name: apple-training # a name for the placeholder
          path: /app/data/archive/fruits-360_dataset/fruits-360/Training/Apple # where to copy in the Dataset in the Docker image
        - name: lemon-training
          path: /app/data/archive/fruits-360_dataset/fruits-360/Training/Lemon
        - name: apple-testing
          path: /app/data/archive/fruits-360_dataset/fruits-360/Test/Apple
        - name: lemon-testing
          path: /app/data/archive/fruits-360_dataset/fruits-360/Test/Lemon
    outputs:
      artifacts:
        - name: fruitmodel # name of the artifact generated, and folder name when placed in S3, complete directory will be `../<executaion_id>/housepricemodel`
          globalName: fruitmodel # local identifier name to the workflow, also used above in annotation
          path: /app/model/ # from which folder in docker image (after running workflow step) copy contents to cloud storage
          archive:
            none:   # specify not to compress while uploading to cloud
              {}
          
    container:
      image: docker.io/<DOCKER_USERNAME>/fruits:01 # Your docker image name
      command: ["/bin/sh", "-c"]
      args:
        - "python /app/src/main.py"
